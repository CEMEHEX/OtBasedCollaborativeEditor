buildscript {
    repositories {
        jcenter()
    }
}

plugins {
    id 'org.jetbrains.kotlin.multiplatform' version '1.3.40'
    id 'org.springframework.boot' version "2.2.0.RELEASE"
    id 'io.spring.dependency-management' version "1.0.8.RELEASE"
    id 'org.jetbrains.kotlin.plugin.spring' version "1.3.40"
}

group = "com.example"
version = "0.0.1-SNAPSHOT"
java.sourceCompatibility = JavaVersion.VERSION_1_8

repositories {
    jcenter()
    maven { url "https://dl.bintray.com/kotlin/ktor" }
    mavenCentral()
}
def ktor_version = '1.1.3'
def logback_version = '1.2.3'

kotlin {
    jvm()
    js {
        browser {
        }
    }
    sourceSets {
        commonMain {
            dependencies {
                implementation kotlin('stdlib-common')
            }
        }
        commonTest {
            dependencies {
                implementation kotlin('test-common')
                implementation kotlin('test-annotations-common')
            }
        }
        jvmMain {
            dependencies {
                implementation kotlin('stdlib-jdk8')
                implementation "io.ktor:ktor-server-netty:$ktor_version"
                implementation "io.ktor:ktor-html-builder:$ktor_version"
                implementation "ch.qos.logback:logback-classic:$logback_version"

                implementation "org.springframework.boot:spring-boot-starter-thymeleaf"
                implementation "org.springframework.boot:spring-boot-starter-web"
                implementation "org.springframework.boot:spring-boot-starter-webflux"
                implementation "org.springframework.boot:spring-boot-starter-websocket"
                implementation "com.fasterxml.jackson.module:jackson-module-kotlin"
                implementation "org.jetbrains.kotlin:kotlin-reflect"
                implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-reactor"
                implementation "org.springframework.session:spring-session-core"
//                testImplementation("org.springframework.boot:spring-boot-starter-test") {
//                    exclude(group = "org.junit.vintage", module = "junit-vintage-engine")
//                }
//                testImplementation("io.projectreactor:reactor-test")
            }
        }
        jvmTest {
            dependencies {
                implementation kotlin('test')
                implementation kotlin('test-junit')
            }
        }
        jsMain {
            dependencies {
                implementation kotlin('stdlib-js')
            }
        }
        jsTest {
            dependencies {
                implementation kotlin('test-js')
            }
        }
    }
}

jvmJar {
    dependsOn(jsBrowserWebpack)
    from(new File(jsBrowserWebpack.entry.name, jsBrowserWebpack.outputPath))
}

task run(type: JavaExec, dependsOn: [jvmJar]) {
    group = "application"
    main = "ot.MainKt"
    classpath(configurations.jvmRuntimeClasspath, jvmJar)
    args = []
}

compileKotlinJvm() {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}